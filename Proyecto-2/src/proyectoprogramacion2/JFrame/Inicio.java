/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectoprogramacion2.JFrame;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Insets;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import proyectoprogramacion2.Pelicula;
import proyectoprogramacion2.RellenarListas;



/**
 *
 * @author josue
 */
public class Inicio extends javax.swing.JFrame {

    private RellenarListas rellenarLista;

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        rellenarLista = new RellenarListas();
        rellenarLista.RellenarListaPopular("&language=es-Es");
        rellenarLista.RellenarListaTotal("&language=es-ES");
        mostrarPeliculasPopulares();
         setExtendedState(JFrame.MAXIMIZED_BOTH);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        BotonBuscar = new javax.swing.JButton();
        TextoBuscar = new javax.swing.JTextField();
        BotonVolver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Genero = new javax.swing.JComboBox<>();
        Fecha = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane1.setViewportView(jPanel1);

        BotonBuscar.setText("Buscar");
        BotonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarActionPerformed(evt);
            }
        });

        TextoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoBuscarActionPerformed(evt);
            }
        });

        BotonVolver.setText("Volver");
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(TextoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonVolver)
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(BotonBuscar)
                .addComponent(TextoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(BotonVolver))
        );

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PELICULAS POPULARES");

        Genero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir Genero", "Acción", "Animación", "Aventura", "Bélica", "Ciencia ficción", "Comedia", "Crimen", "Drama", "Familia", "Fantasía", "Historia", "Misterio", "Música", "Película de TV", "Romance", "Suspense", "Terror" }));
        Genero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneroActionPerformed(evt);
            }
        });

        Fecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fecha", "Mas nuevas a mas viejas", "Mas viejas a mas nuevas" }));
        Fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Genero)
                    .addComponent(Fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoBuscarActionPerformed

    private void BotonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarActionPerformed
        // TODO add your handling code here:
        String textoBuscado = TextoBuscar.getText();
        buscarPeliculas(textoBuscado);
    }//GEN-LAST:event_BotonBuscarActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void GeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneroActionPerformed
        // TODO add your handling code here:
            String generoSeleccionado = (String) Genero.getSelectedItem();
    if (!"Elegir Genero".equals(generoSeleccionado)) {
        filtrarPeliculasPorGenero(generoSeleccionado);
    } else {
        mostrarPeliculasPopulares(); // Mostrar todas las películas si no se ha seleccionado un género específico
    }
    }//GEN-LAST:event_GeneroActionPerformed

    private void BotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverActionPerformed
        // TODO add your handling code here:
        Inicio i = new Inicio();
        dispose();
        i.setVisible(true);
    }//GEN-LAST:event_BotonVolverActionPerformed

    private void FechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FechaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

private void mostrarPeliculasPopulares() {
    List<Pelicula> peliculasPopulares = rellenarLista.getPopularpeliculas();

    // Configura el layout del jPanel1
    jPanel1.setLayout(new GridLayout(0, 4, -100, 25)); // Ajusta el espaciado entre columnas y filas según tus necesidades

    // Itera sobre las películas populares y crea paneles para mostrar la información en columnas
    for (Pelicula pelicula : peliculasPopulares) {
        
        
        JPanel panelPelicula = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
                    panelPelicula.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Cuando se hace clic en el JLabel, abre la ventana "DetallePelicula" con los detalles de la película
                DetallePelicula ventanaDetalle = new DetallePelicula();
                ventanaDetalle.setDetallesPelicula(pelicula.getTitulo(), pelicula.getPosterPath(), pelicula.getOverview(),pelicula.getGeneros());
                ventanaDetalle.setVisible(true); // Muestra la ventana de detalles
            }
        });
        // Dividir el título en dos líneas si supera los 15 caracteres
        String titulo = pelicula.getTitulo();
        if (titulo.length() > 15) {
            int index = titulo.indexOf(" ", 15); // Buscar el espacio más cercano después de los 15 caracteres
            if (index != -1) {
                String primeraLinea = titulo.substring(0, index);
                String segundaLinea = titulo.substring(index + 1);
                titulo = "<html>" + primeraLinea + "<br>" + segundaLinea + "</html>";
            }
        }

        // Agrega una etiqueta con el título de la película en la parte superior
        JLabel labelTitulo = new JLabel(titulo);
        labelTitulo.setFont(new Font("Arial", Font.BOLD, 20)); // Ajusta el tamaño de la fuente según tus preferencias
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(5, 5, 5, 5); // Ajusta el espaciado hacia los lados
        panelPelicula.add(labelTitulo, gbc);

        try {
            // Intenta cargar la imagen desde la URL del póster
            Image image = new ImageIcon(new URL("https://image.tmdb.org/t/p/w500" + pelicula.getPosterPath())).getImage();
            // Ajusta el tamaño de la imagen
            Image scaledImage = image.getScaledInstance(200, 350, Image.SCALE_DEFAULT);
            JLabel labelPoster = new JLabel(new ImageIcon(scaledImage));
            gbc.gridy = 1;
            gbc.insets = new Insets(5, 5, 5, 5); // Ajusta el espaciado entre la imagen y el título
            panelPelicula.add(labelPoster, gbc);
        } catch (Exception e) {
            // Maneja la excepción (puedes imprimir información de depuración o mostrar un mensaje de error)
            e.printStackTrace();
            JLabel labelError = new JLabel("Error al cargar la imagen");
            gbc.gridy = 1;
            gbc.insets = new Insets(5, 5, 5, 5); // Ajusta el espaciado entre la imagen y el título
            panelPelicula.add(labelError, gbc);


        }
        

        // Agrega el panel de la película al jPanel1
        jPanel1.add(panelPelicula);
                           
    }

    // Actualiza el jPanel1
    jPanel1.revalidate();
    jPanel1.repaint();
    
}

private void buscarPeliculas(String textoBuscado) {
    List<Pelicula> resultadoBusqueda = new ArrayList<>();
    List<Pelicula> peliculas = rellenarLista.getPeliculas();

    for (Pelicula pelicula : peliculas) {
        if (pelicula.getTitulo().toLowerCase().contains(textoBuscado.toLowerCase())) {
            resultadoBusqueda.add(pelicula);
        }
    }

    mostrarPeliculas(resultadoBusqueda);
}
private void mostrarPeliculas(List<Pelicula> peliculas) {
    jPanel1.removeAll(); // Limpia el panel actual
    jPanel1.setLayout(new GridLayout(0, 4, -100, 25)); // Ajusta el espaciado entre columnas y filas

    // Itera sobre las películas y crea paneles para mostrar la información en columnas
   for (Pelicula pelicula : peliculas) {
        
        
        JPanel panelPelicula = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
                    panelPelicula.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Cuando se hace clic en el JLabel, abre la ventana "DetallePelicula" con los detalles de la película
                DetallePelicula ventanaDetalle = new DetallePelicula();
                ventanaDetalle.setDetallesPelicula(pelicula.getTitulo(), pelicula.getPosterPath(), pelicula.getOverview(), pelicula.getGeneros());

                ventanaDetalle.setVisible(true); // Muestra la ventana de detalles
            }
        });
        // Dividir el título en dos líneas si supera los 15 caracteres
        String titulo = pelicula.getTitulo();
        if (titulo.length() > 15) {
            int index = titulo.indexOf(" ", 15); // Buscar el espacio más cercano después de los 15 caracteres
            if (index != -1) {
                String primeraLinea = titulo.substring(0, index);
                String segundaLinea = titulo.substring(index + 1);
                titulo = "<html>" + primeraLinea + "<br>" + segundaLinea + "</html>";
            }
        }

        // Agrega una etiqueta con el título de la película en la parte superior
        JLabel labelTitulo = new JLabel(titulo);
        labelTitulo.setFont(new Font("Arial", Font.BOLD, 20)); // Ajusta el tamaño de la fuente según tus preferencias
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(5, 5, 5, 5); // Ajusta el espaciado hacia los lados
        panelPelicula.add(labelTitulo, gbc);

        try {
            // Intenta cargar la imagen desde la URL del póster
            Image image = new ImageIcon(new URL("https://image.tmdb.org/t/p/w500" + pelicula.getPosterPath())).getImage();
            // Ajusta el tamaño de la imagen
            Image scaledImage = image.getScaledInstance(200, 350, Image.SCALE_DEFAULT);
            JLabel labelPoster = new JLabel(new ImageIcon(scaledImage));
            gbc.gridy = 1;
            gbc.insets = new Insets(5, 5, 5, 5); // Ajusta el espaciado entre la imagen y el título
            panelPelicula.add(labelPoster, gbc);
        } catch (Exception e) {
            // Maneja la excepción (puedes imprimir información de depuración o mostrar un mensaje de error)
            e.printStackTrace();
            JLabel labelError = new JLabel("Error al cargar la imagen");
            gbc.gridy = 1;
            gbc.insets = new Insets(5, 5, 5, 5); // Ajusta el espaciado entre la imagen y el título
            panelPelicula.add(labelError, gbc);


        }
        

        // Agrega el panel de la película al jPanel1
        jPanel1.add(panelPelicula);
                           
    }

    jPanel1.revalidate();
    jPanel1.repaint();
}
private void filtrarPeliculasPorGenero(String generoSeleccionado) {
    List<Pelicula> peliculasFiltradas = new ArrayList<>();
    List<Pelicula> todasLasPeliculas = rellenarLista.getPeliculas(); // Asegúrate de que este método devuelva todas las películas

    for (Pelicula pelicula : todasLasPeliculas) {
        if (pelicula.getGeneros().contains(generoSeleccionado)) {
            peliculasFiltradas.add(pelicula);
        }
    }

    mostrarPeliculas(peliculasFiltradas);
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBuscar;
    private javax.swing.JButton BotonVolver;
    private javax.swing.JComboBox<String> Fecha;
    private javax.swing.JComboBox<String> Genero;
    private javax.swing.JTextField TextoBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
